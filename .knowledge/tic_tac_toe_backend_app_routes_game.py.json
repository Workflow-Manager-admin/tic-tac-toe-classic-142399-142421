{"is_source_file": true, "format": "Python", "description": "This file defines routes/endpoints for a Flask-based backend API managing a Tic-Tac-Toe game, including match-making, game moves, game history, and leaderboard functionalities.", "external_files": ["../db", "../models", "../schemas", "../utils"], "external_methods": ["get_db", "check_winner", "ai_make_random_move"], "published": ["match_vs_player", "match_vs_ai", "make_move", "get_game_history", "get_leaderboard"], "classes": [], "methods": [{"name": "get_current_username()", "description": "Helper function to retrieve the current user's username from request headers or session.", "scope": "", "scopeKind": ""}, {"name": "match_vs_player(args)", "description": "API route to create or join a match against another human player, handling matchmaking logic.", "scope": "", "scopeKind": ""}, {"name": "match_vs_ai(args)", "description": "API route to start a new game against an AI opponent.", "scope": "", "scopeKind": ""}, {"name": "make_move(args, game_id)", "description": "API route for making a move in an ongoing game, updating game state, checking for wins, and handling AI moves if applicable.", "scope": "", "scopeKind": ""}, {"name": "get_game_history()", "description": "Fetches the game history for the current user.", "scope": "", "scopeKind": ""}, {"name": "get_leaderboard()", "description": "Retrieves the top players based on win count.", "scope": "", "scopeKind": ""}], "calls": ["get_db", "check_winner", "ai_make_random_move"], "search-terms": ["Flask API routes", "Tic-Tac-Toe backend", "matchmaking", "game move handling", "game history", "leaderboard", "session user retrieval"], "state": 2, "file_id": 11, "knowledge_revision": 28, "git_revision": "40cbb5119c92295a3d9ed6756b70d1a7f6ea6875", "revision_history": [{"23": ""}, {"28": "40cbb5119c92295a3d9ed6756b70d1a7f6ea6875"}], "ctags": [{"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-142399-142421/tic_tac_toe_backend/app/routes/game.py", "pattern": "/^blp = Blueprint(\"Game\", \"game\", url_prefix=\"\\/api\\/game\", description=\"Game management, play, an/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_current_username", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-142399-142421/tic_tac_toe_backend/app/routes/game.py", "pattern": "/^def get_current_username():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_game_history", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-142399-142421/tic_tac_toe_backend/app/routes/game.py", "pattern": "/^def get_game_history():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_leaderboard", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-142399-142421/tic_tac_toe_backend/app/routes/game.py", "pattern": "/^def get_leaderboard():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "make_move", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-142399-142421/tic_tac_toe_backend/app/routes/game.py", "pattern": "/^def make_move(args, game_id):$/", "language": "Python", "kind": "function", "signature": "(args, game_id)"}, {"_type": "tag", "name": "match_vs_ai", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-142399-142421/tic_tac_toe_backend/app/routes/game.py", "pattern": "/^def match_vs_ai(args):$/", "language": "Python", "kind": "function", "signature": "(args)"}, {"_type": "tag", "name": "match_vs_player", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-142399-142421/tic_tac_toe_backend/app/routes/game.py", "pattern": "/^def match_vs_player(args):$/", "language": "Python", "kind": "function", "signature": "(args)"}], "hash": "4ff6f54e3ea6780f290bd5f5b400cd98", "format-version": 4, "code-base-name": "tic_tac_toe_backend", "filename": "tic_tac_toe_backend/app/routes/game.py", "fields": [{"name": "blp = Blueprint(\"Game\", \"game\", url_prefix=\"\\/api\\/game\", description=\"Game management, play, an/", "scope": "", "scopeKind": "", "description": "unavailable"}]}